{"version":3,"sources":["components/Body.js","components/Footer.js","components/TopBackground.js","pages/About.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["body","className","footer","About","props","id","role","Header","useState","getButton","setButton","class","width","height","viewBox","xmlns","fill","d","type","aria-controls","onClick","title","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mKASA,IAIeA,EAJF,6BACT,mBAPJ,WACI,OACI,yBAAKC,UAAU,QAAf,oBAKJ,OCAJ,IAIeC,EAJA,6BACX,mBATJ,WACI,OACI,yBAAKD,UAAU,wBAOnB,OCIiB,6BACjB,mBAZJ,WAGI,OACI,yBAAKA,UAAU,kBAEVD,EACAE,KAKT,OADJ,ICSeC,EArBD,SAAAC,GAEV,OACI,0BAAMC,GAAG,OAAOC,KAAK,QACjB,iCACI,4BAAQL,UAAU,SACd,yBAAKA,UAAU,SACX,yCACA,+DAIZ,yBAAKA,UAAU,WACX,yBAAKA,UAAU,qB,OCmDhBM,EAhEA,SAAAH,GAAU,IAAD,EACWI,oBAAS,GADpB,mBACbC,EADa,KACFC,EADE,KAIpB,OACI,4BAAQL,GAAG,SAASC,KAAK,SAASL,UAAWQ,EAAY,aAAe,IACpE,yBAAKE,MAAM,SAEP,uBAAGV,UAAU,QACT,yBAAKW,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,MAAM,8BAClD,iEACA,uBAAGC,KAAK,QACJ,0BAAML,MAAM,SAASM,EAAE,6QACvB,0BAAMA,EAAE,6FAGhB,yBAAKhB,UAAU,aACX,0CACA,oDAIR,4BAAQI,GAAG,cAAcM,MAAM,eAAeO,KAAK,SAASC,gBAAc,MAAMC,QAAS,kBAAMV,GAAWD,MAE1G,yBAAKJ,GAAG,MAAMC,KAAK,aAAaL,UAAU,QACtC,wBAAII,GAAG,gBAAgBJ,WAAS,GAC5B,wBAAII,GAAG,iBAAiBJ,UAAU,4IAC9B,uBAAGoB,MAAM,yDAAT,UAIJ,wBAAIhB,GAAG,iBAAiBJ,UAAU,0FAC9B,uBAAGoB,MAAM,yDAAT,cAIJ,wBAAIhB,GAAG,iBAAiBJ,UAAU,2EAC9B,uBAAGoB,MAAM,yDAAT,WAIJ,wBAAIhB,GAAG,iBAAiBJ,UAAU,2EAC9B,uBAAGoB,MAAM,yDAAT,aAIJ,wBAAIhB,GAAG,iBAAiBJ,UAAU,2EAC9B,uBAAGoB,MAAM,yDAAT,eAIJ,wBAAIhB,GAAG,iBAAiBJ,UAAU,gFAC9B,uBAAGoB,MAAM,yDAAT,c,MCvCbC,MATf,WACE,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QCCcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.fec75f8c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nfunction Body() {\r\n    return (\r\n        <div className=\"body\">I`m Mor Shervy</div>\r\n    );\r\n}\r\n\r\nconst body = <div>\r\n    <Body />\r\n</div>\r\n\r\nexport default body;\r\n\r\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"Footer-background\">\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst footer = <div>\r\n    <Footer />\r\n</div>\r\n\r\nexport default footer;","import React from 'react';\r\nimport body from './Body';\r\nimport footer from './Footer';\r\n\r\nfunction TopBackround() {\r\n\r\n\r\n    return (\r\n        <div className=\"Top-background\">\r\n\r\n            {body}\r\n            {footer}\r\n        </div>\r\n    )\r\n}\r\nconst topBackround = <div>\r\n    <TopBackround />\r\n</div>\r\n\r\nexport default topBackround;","import React from 'react';\r\n\r\n\r\nconst About = props => {\r\n\r\n    return (\r\n        <main id=\"main\" role=\"main\">\r\n            <article>\r\n                <header className=\"intro\">\r\n                    <div className=\"group\">\r\n                        <h1>About Mor</h1>\r\n                        <h2>Practical Sowftware Engineer</h2>\r\n                    </div>\r\n                </header>\r\n            </article>\r\n            <div className=\"content\">\r\n                <div className=\"avatar social\">\r\n                    {/* <img src={require('../images/morprofile.jpg')} width=\"140\" height=\"140\" alt=\"Mor profile pic\" /> */}\r\n                </div>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default About;","import React, { useEffect, useState } from 'react';\r\n\r\n\r\nconst Header = props => {\r\n    const [getButton, setButton] = useState(false)\r\n\r\n\r\n    return (\r\n        <header id=\"header\" role=\"banner\" className={getButton ? \"menu--open\" : \"\"}>\r\n            <div class=\"group\">\r\n\r\n                <a className=\"logo\">\r\n                    <svg width=\"52\" height=\"52\" viewBox=\"0 0 52 52\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <title>Mor Shervy Design Limited Logo</title>\r\n                        <g fill=\"#FFF\">\r\n                            <path class=\"circle\" d=\"M6.188 26c0-10.938 8.875-19.813 19.813-19.813 10.938 0 19.813 8.875 19.813 19.813 0 10.938-8.875 19.813-19.813 19.813-10.938 0-19.813-8.875-19.813-19.813zm-5.188 0c0 13.813 11.188 25 25 25 13.813 0 25-11.188 25-25 0-13.813-11.188-25-25-25-13.813 0-25 11.188-25 25z\"></path>\r\n                            <path d=\"M15.438 22.125h8.625v15.375h-8.625v-15.375zM27.938 14.438h8.625v23.063h-8.625v-23.063z\"></path>\r\n                        </g>\r\n                    </svg>\r\n                    <div className=\"logo-name\">\r\n                        <h1>Mor Shervy</h1>\r\n                        <h2>Fron-end Developer</h2>\r\n                    </div>\r\n                </a>\r\n\r\n                <button id=\"mobile-menu\" class=\"menu__button\" type=\"button\" aria-controls=\"nav\" onClick={() => setButton(!getButton)}></button>\r\n\r\n                <nav id=\"nav\" role=\"navigation\" className=\"menu\">\r\n                    <ul id=\"menu-nav_menu\" className>\r\n                        <li id=\"menu-item-4166\" className=\"menu-item menu-item-type-post_type menu-item-object-page current-menu-item page_item page-item-9 current_page_item menu-item-4166 active\">\r\n                            <a title=\"About Mor Shervy - Web Designer & Front-end Developer\">\r\n                                ABOUT\r\n                            </a>\r\n                        </li>\r\n                        <li id=\"menu-item-4167\" className=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-home menu-item-4167\">\r\n                            <a title=\"About Mor Shervy - Web Designer & Front-end Developer\">\r\n                                PROTFOLIO\r\n                            </a>\r\n                        </li>\r\n                        <li id=\"menu-item-4528\" className=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-4528\">\r\n                            <a title=\"About Mor Shervy - Web Designer & Front-end Developer\">\r\n                                SKILLS\r\n                            </a>\r\n                        </li>\r\n                        <li id=\"menu-item-4164\" className=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-4164\">\r\n                            <a title=\"About Mor Shervy - Web Designer & Front-end Developer\">\r\n                                PROJECTS\r\n                            </a>\r\n                        </li>\r\n                        <li id=\"menu-item-4953\" className=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-4953\">\r\n                            <a title=\"About Mor Shervy - Web Designer & Front-end Developer\">\r\n                                CONTACT ME\r\n                            </a>\r\n                        </li>\r\n                        <li id=\"menu-item-4651\" className=\"hire menu-item menu-item-type-post_type menu-item-object-page menu-item-4651\">\r\n                            <a title=\"About Mor Shervy - Web Designer & Front-end Developer\">\r\n                                STAM\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n\r\n            </div>\r\n        </header >\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\nimport topBackground from './components/TopBackground';\nimport About from './pages/About';\nimport Header from './components/Header';\n\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <About />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}